{"version":3,"sources":["components/Home.js","actions/types.js","components/Login.js","actions/auth.js","axios.js","components/Signup.js","components/Activate.js","components/ResetPassword.js","components/ResetPasswordConfirm.js","reducers/auth.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Fragment","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","connect","login","email","password","dispatch","a","config","headers","body","JSON","stringify","axios","post","process","res","type","payload","data","localStorage","getItem","get","useState","formData","setFormData","onChange","e","target","name","value","Container","className","Form","onSubmit","preventDefault","Group","Label","Control","id","required","Button","variant","to","axiosInstance","create","baseURL","timeout","Authorization","accept","Signup","state","input","errors","handleChange","bind","handlePhoneField","handleSubmit","this","setState","test","isValid","String","toLowerCase","validate","console","log","phone_number","first_name","last_name","re_password","then","placeholder","Text","InputGroup","Prepend","maxLength","onClick","React","Component","Activate","ResetPassword","ResetPasswordConfirm","initialState","access","refresh","isAuthenticated","user","combineReducers","auth","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","HomePage","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee02b353.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Home() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>Home</h1>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Home;","export const LOGIN_SUCCESS = 'LOGIN_SUCCES';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL;'","import React, { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Form, Button } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\n\r\nconst Login = ({ login }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Form onSubmit={e => onSubmit(e)}>\r\n                Log in\r\n                <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Log in\r\n                </Button>\r\n                <p>Forgot password? Click <Link to=\"/reset_password\">here</Link>.</p>\r\n                <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link>.</p>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n\r\n// });\r\n\r\nexport default connect(null, { login })(Login);","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL\r\n} from './types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};","import axios from 'axios';\r\n\r\nconst baseURL = 'http://127.0.0.1:8000/';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: baseURL,\r\n    timeout: 5000,\r\n    headers: {\r\n        Authorization: localStorage.getItem('access_token')\r\n            ? 'JWT ' + localStorage.getItem('access_token')\r\n            : null,\r\n        'Content-Type': 'application/json',\r\n        accept: 'application/json',\r\n    },\r\n});\r\n\r\nexport default axiosInstance;","import React from 'react';\r\nimport { Container, Form, InputGroup, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axiosInstance from '../axios';\r\n\r\n\r\nexport default class Signup extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            input: {\r\n                'email': '',\r\n                'phone_number': '',\r\n                'first_name': '',\r\n                'last_name': '',\r\n                'password': '',\r\n                're_password': ''\r\n            },\r\n            errors: {},\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePhoneField = this.handlePhoneField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let input = this.state.input;\r\n        input[e.target.name] = e.target.value;\r\n\r\n        this.setState({ input });\r\n    }\r\n\r\n    handlePhoneField(e) {\r\n        let input = this.state.input;\r\n        input[e.target.name] = e.target.value;\r\n\r\n        const re = /^[0-9\\b]+$/;\r\n\r\n        // If value is not blank, test using regex\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            this.setState({ input })\r\n        }\r\n    }\r\n\r\n    validate() {\r\n        let input = this.state.input;\r\n        let errors = {};\r\n        let isValid = true;\r\n\r\n        if (!input['email']) {\r\n            errors['email'] = \"Email is required.\";\r\n            isValid = false;\r\n        } else {\r\n            const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n            if (!re.test(String(input['email'].toLowerCase()))) {\r\n                errors['email'] = \"Email is not valid.\"\r\n                isValid = false;\r\n            }\r\n        }\r\n\r\n        if (!input['phone_number']) {\r\n            errors['phone_number'] = \"Phone number is required.\";\r\n            isValid = false;\r\n        } else {\r\n            const phone_regex = /^(9)\\d{9}$/;\r\n            if (!phone_regex.test(input['phone_number'])) {\r\n                errors['phone_number'] = \"Phone number not valid.\";\r\n                isValid = false;\r\n            }\r\n        }\r\n\r\n        if (!input['first_name']) {\r\n            errors['first_name'] = \"First name is required.\";\r\n            isValid = false;\r\n        }\r\n\r\n        if (!input['last_name']) {\r\n            errors['last_name'] = \"Last name is required.\";\r\n            isValid = false;\r\n        }\r\n\r\n        if (!input['password']) {\r\n            errors['password'] = \"Password is required.\";\r\n            isValid = false;\r\n        }\r\n\r\n        if (!input['re_password']) {\r\n            errors['re_password'] = \"Confirm password.\";\r\n            isValid = false;\r\n        }\r\n\r\n        if (input['password'] !== input['re_password']) {\r\n            errors['re_password'] = \"Passwords don't match.\";\r\n            isValid = false;\r\n        }\r\n\r\n        this.setState({\r\n            errors: errors,\r\n        });\r\n\r\n        return isValid;\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (this.validate()) {\r\n            console.log(this.state.input)\r\n\r\n            let phone_number = '+63' + this.state.input['phone_number'];\r\n            axiosInstance.post(`users/`, {\r\n                email: this.state.input['email'],\r\n                phone_number: phone_number,\r\n                first_name: this.state.input['first_name'],\r\n                last_name: this.state.input['last_name'],\r\n                password: this.state.input['password'],\r\n                re_password: this.state.input['re_password'],\r\n            }).then((res) => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n            });   \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-4\">\r\n                <Form>\r\n                    <h3>Sign up</h3>\r\n                    <Form.Group>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"email\"\r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            value={this.state.input.email}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Email\"\r\n                        />\r\n                        <Form.Text className=\"text-danger\">{this.state.errors.email}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>+63</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control \r\n                                required\r\n                                maxLength=\"10\"\r\n                                id=\"phone_number\" \r\n                                name=\"phone_number\"\r\n                                value={this.state.input.phone_number}\r\n                                onChange={this.handlePhoneField}\r\n                                type=\"text\" \r\n                                placeholder=\"Phone\"\r\n                            />\r\n                        </InputGroup>\r\n                        <Form.Text className=\"text-danger\">{this.state.errors.phone_number}</Form.Text>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group>\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"text\"\r\n                            id=\"first_name\" \r\n                            name=\"first_name\" \r\n                            value={this.state.input.first_name}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"First Name\"\r\n                        />\r\n                        <Form.Text className=\"text-danger\">{this.state.errors.first_name}</Form.Text>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group>\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"text\"\r\n                            id=\"last_name\" \r\n                            name=\"last_name\" \r\n                            value={this.state.input.last_name}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Last Name\"\r\n                        />\r\n                        <Form.Text className=\"text-danger\">{this.state.errors.last_name}</Form.Text>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"password\"\r\n                            id=\"password\" \r\n                            name=\"password\" \r\n                            value={this.state.input.password}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Password\"\r\n                        />\r\n                        <Form.Text className=\"text-danger\">{this.state.errors.password}</Form.Text>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group>\r\n                        <Form.Label>Re-type Password</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"password\"\r\n                            id=\"re_password\" \r\n                            name=\"re_password\" \r\n                            value={this.state.input.re_password}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Re-type Password\"\r\n                        />\r\n                        <Form.Text className=\"text-danger\">{this.state.errors.re_password}</Form.Text>\r\n                    </Form.Group>\r\n    \r\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n                        Sign up\r\n                    </Button>\r\n                    <p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nfunction Activate() {\r\n    return (<>Activate</>);\r\n}\r\n\r\nexport default Activate;","import React from 'react';\r\n\r\nfunction ResetPassword() {\r\n    return (<>Reset Password</>);\r\n}\r\n\r\nexport default ResetPassword;","import React from 'react';\r\n\r\nfunction ResetPasswordConfirm() {\r\n    return (<>Reset Password Confirm</>);\r\n}\r\n\r\nexport default ResetPasswordConfirm;","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state=initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                access: null,\r\n                refresh: null,\r\n                user: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\n\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\nimport HomePage from './components/Home';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\nimport Activate from './components/Activate';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport ResetPasswordConfirm from './components/ResetPasswordConfirm';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <React.Fragment>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/signup\" component={Signup} />\r\n            <Route path=\"/activate/:uid/:token\" component={Activate} />\r\n            <Route path=\"/reset_password\" component={ResetPassword} />\r\n            <Route path=\"/password/reset/confirm/:uid/:token\" component={ResetPasswordConfirm} />\r\n          </Switch>\r\n        </Router>\r\n      </React.Fragment>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}