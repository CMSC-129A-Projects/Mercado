{"version":3,"sources":["actions/types.js","actions/auth.js","components/Layout.js","components/NavigationBar.js","components/Home.js","components/Login.js","components/Signup.js","components/Activate.js","components/ResetPassword.js","components/ResetPasswordConfirm.js","reducers/auth.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","checkAuthenticated","body","JSON","stringify","token","post","code","children","useEffect","Fragment","state","isAuthenticated","auth","logout","Navbar","bg","variant","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","onClick","to","login","email","password","useState","formData","setFormData","onChange","e","target","name","value","Container","Form","onSubmit","preventDefault","Group","Label","Control","required","Check","label","Button","signup","phone_number","first_name","last_name","re_password","accountCreated","setAccountCreated","InputGroup","Prepend","Text","maxLength","test","onPhoneChange","verify","uid","match","verified","setVerified","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Home","Login","Signup","Activate","ResetPassword","ResetPasswordConfirm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef033859.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCES';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = (email, phone_number, first_name, last_name, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({ email, phone_number, first_name, last_name, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { checkAuthenticated, load_user } from '../actions/auth';\r\n\r\nconst Layout = ({ checkAuthenticated, load_user, children }) => {\r\n    useEffect(() => {\r\n        checkAuthenticated();\r\n        load_user();\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {children}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","import React, { Fragment } from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { logout } from '../actions/auth';\r\n\r\nconst NavigationBar = ({ logout }) => {\r\n    const logout_user = () => {\r\n        logout();\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"\" onClick={logout_user}>Logout</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(NavigationBar);","import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport NavigationBar from './NavigationBar';\r\n\r\nconst Home = ({ isAuthenticated }) => {\r\n    if (!isAuthenticated) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <NavigationBar />\r\n            <h1>Home</h1>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Home);","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Container, Form, Button } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { login } from '../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Form onSubmit={e => onSubmit(e)}>\r\n                Log in\r\n                <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Check type=\"checkbox\" id=\"terms\" label=\"Accept terms & agreements.\" />\r\n                    <Link to=\"/signup\">Read here</Link>.\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Log in\r\n                </Button>\r\n                <p>Forgot password? Click <Link to=\"/reset_password\">here</Link>.</p>\r\n                <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link>.</p>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Container, Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { signup } from '../actions/auth';\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        phone_number: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    const { email, phone_number, first_name, last_name, password, re_password } = formData;\r\n\r\n    const onPhoneChange = e => {\r\n        const re = /^[0-9\\b]+$/;\r\n\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            setFormData({ ...formData, [e.target.name]: e.target.value });\r\n        }\r\n    };\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            let phone = '+63' + phone_number;\r\n            signup(email, phone, first_name, last_name, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    if (accountCreated) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Form onSubmit={e => onSubmit(e)}>\r\n                Sign Up\r\n                <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Phone</Form.Label>\r\n                    <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>+63</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control \r\n                            type=\"text\"\r\n                            name=\"phone_number\"\r\n                            id=\"phone_number\"\r\n                            maxLength=\"10\" \r\n                            value={phone_number}\r\n                            onChange={e => onPhoneChange(e)}\r\n                            required\r\n                        />\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        name=\"first_name\"\r\n                        id=\"first_name\"\r\n                        value={first_name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        name=\"last_name\"\r\n                        id=\"last_name\"\r\n                        value={last_name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Re-type Password</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\"\r\n                        name=\"re_password\"\r\n                        id=\"re_password\"\r\n                        value={re_password}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Check type=\"checkbox\" id=\"terms\" label=\"Accept terms & agreements.\" />\r\n                    <Link to=\"/login\">Read here</Link>.\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Sign up\r\n                </Button>\r\n                <p>Already have an account? <Link to=\"/login\">Log In</Link>.</p>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","import React, { useState } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { verify } from '../actions/auth';\r\n\r\nconst Activate = ({ verify, match }) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verifyAccount = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-6\">\r\n            <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                <h1>Verify Your Account</h1>\r\n                <Button variant=\"primary\" onClick={verifyAccount}>Verify</Button>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\n\r\nimport { reset_password } from '../actions/auth';\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Form onSubmit={e => onSubmit(e)}>\r\n                Password Reset Request\r\n                <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n    \r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Request\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\n\r\nimport { reset_password_confirm } from '../actions/auth';\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    if (requestSent) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Form onSubmit={e => onSubmit(e)}>\r\n                Reset Password\r\n                <Form.Group>\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\"\r\n                        name=\"new_password\"\r\n                        id=\"new_password\"\r\n                        value={new_password}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Re-type New Password</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\"\r\n                        name=\"re_new_password\"\r\n                        id=\"re_new_password\"\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n    \r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Reset Password\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state=initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                access: null,\r\n                refresh: null,\r\n                user: null\r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\n\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\nimport Layout from './components/Layout';\r\nimport Home from './components/Home';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\nimport Activate from './components/Activate';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport ResetPasswordConfirm from './components/ResetPasswordConfirm';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <React.Fragment>\r\n        <Router>\r\n          <Layout>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/signup\" component={Signup} />\r\n              <Route path=\"/activate/:uid/:token\" component={Activate} />\r\n              <Route path=\"/reset_password\" component={ResetPassword} />\r\n              <Route path=\"/password/reset/confirm/:uid/:token\" component={ResetPasswordConfirm} />\r\n            </Switch>\r\n          </Layout>\r\n        </Router>\r\n      </React.Fragment>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}