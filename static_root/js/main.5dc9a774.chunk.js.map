{"version":3,"sources":["actions/types.js","actions/auth.js","components/Layout.js","components/NavigationBar.js","components/Home.js","components/Login.js","axios.js","components/Signup.js","components/Activate.js","components/ResetPassword.js","components/ResetPasswordConfirm.js","reducers/auth.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","checkAuthenticated","body","JSON","stringify","token","post","code","children","useEffect","Fragment","state","isAuthenticated","auth","logout","Navbar","bg","variant","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","onClick","to","login","email","password","useState","formData","setFormData","onChange","e","target","name","value","Container","Form","onSubmit","preventDefault","Group","Label","Control","required","Check","label","Button","axiosInstance","create","baseURL","timeout","Authorization","accept","Signup","input","errors","handleChange","bind","handlePhoneField","handleSubmit","this","setState","test","isValid","String","toLowerCase","validate","console","log","phone_number","first_name","last_name","re_password","then","placeholder","Text","InputGroup","Prepend","maxLength","React","Component","Activate","ResetPassword","ResetPasswordConfirm","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Home","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dc9a774.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCES';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const LOGOUT = 'LOGOUT';","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    \r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { checkAuthenticated, load_user } from '../actions/auth';\r\n\r\nconst Layout = ({ checkAuthenticated, load_user, children }) => {\r\n    useEffect(() => {\r\n        checkAuthenticated();\r\n        load_user();\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {children}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","import React, { Fragment } from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { logout } from '../actions/auth';\r\n\r\nconst NavigationBar = ({ logout }) => {\r\n    const logout_user = () => {\r\n        logout();\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"\" onClick={logout_user}>Logout</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(NavigationBar);","import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport NavigationBar from './NavigationBar';\r\n\r\nconst Home = ({ isAuthenticated }) => {\r\n    if (!isAuthenticated) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <NavigationBar />\r\n            <h1>Home</h1>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Home);","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Container, Form, Button } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n    // Check for user authentication \r\n    // Redirect to login page is failed \r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Form onSubmit={e => onSubmit(e)}>\r\n                Log in\r\n                <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Check type=\"checkbox\" id=\"terms\" label=\"Accept terms & agreements.\" />\r\n                    <Link to=\"/\">Read here</Link>.\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Log in\r\n                </Button>\r\n                <p>Forgot password? Click <Link to=\"/reset_password\">here</Link>.</p>\r\n                <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link>.</p>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import axios from 'axios';\r\n\r\nconst baseURL = 'http://127.0.0.1:8000/';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: baseURL,\r\n    timeout: 5000,\r\n    headers: {\r\n        Authorization: localStorage.getItem('access_token')\r\n            ? 'JWT ' + localStorage.getItem('access_token')\r\n            : null,\r\n        'Content-Type': 'application/json',\r\n        accept: 'application/json',\r\n    },\r\n});\r\n\r\nexport default axiosInstance;","import React from 'react';\r\nimport { Container, Form, InputGroup, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axiosInstance from '../axios';\r\n\r\n\r\nexport default class Signup extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            input: {\r\n                'email': '',\r\n                'phone_number': '',\r\n                'first_name': '',\r\n                'last_name': '',\r\n                'password': '',\r\n                're_password': ''\r\n            },\r\n            errors: {},\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePhoneField = this.handlePhoneField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let input = this.state.input;\r\n        input[e.target.name] = e.target.value;\r\n\r\n        this.setState({ input });\r\n    }\r\n\r\n    handlePhoneField(e) {\r\n        let input = this.state.input;\r\n        input[e.target.name] = e.target.value;\r\n\r\n        const re = /^[0-9\\b]+$/;\r\n\r\n        // If value is not blank, test using regex\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            this.setState({ input })\r\n        }\r\n    }\r\n\r\n    validate() {\r\n        let input = this.state.input;\r\n        let errors = {};\r\n        let isValid = true;\r\n\r\n        if (!input['email']) {\r\n            errors['email'] = \"Email is required.\";\r\n            isValid = false;\r\n        } else {\r\n            const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n            if (!re.test(String(input['email'].toLowerCase()))) {\r\n                errors['email'] = \"Email is not valid.\"\r\n                isValid = false;\r\n            }\r\n        }\r\n\r\n        if (!input['phone_number']) {\r\n            errors['phone_number'] = \"Phone number is required.\";\r\n            isValid = false;\r\n        } else {\r\n            const phone_regex = /^(9)\\d{9}$/;\r\n            if (!phone_regex.test(input['phone_number'])) {\r\n                errors['phone_number'] = \"Phone number not valid.\";\r\n                isValid = false;\r\n            }\r\n        }\r\n\r\n        if (!input['first_name']) {\r\n            errors['first_name'] = \"First name is required.\";\r\n            isValid = false;\r\n        }\r\n\r\n        if (!input['last_name']) {\r\n            errors['last_name'] = \"Last name is required.\";\r\n            isValid = false;\r\n        }\r\n\r\n        if (!input['password']) {\r\n            errors['password'] = \"Password is required.\";\r\n            isValid = false;\r\n        }\r\n\r\n        if (!input['re_password']) {\r\n            errors['re_password'] = \"Confirm password.\";\r\n            isValid = false;\r\n        }\r\n\r\n        if (input['password'] !== input['re_password']) {\r\n            errors['re_password'] = \"Passwords don't match.\";\r\n            isValid = false;\r\n        }\r\n\r\n        this.setState({\r\n            errors: errors,\r\n        });\r\n\r\n        return isValid;\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (this.validate()) {\r\n            console.log(this.state.input)\r\n\r\n            let phone_number = '+63' + this.state.input['phone_number'];\r\n            axiosInstance.post(`users/`, {\r\n                email: this.state.input['email'],\r\n                phone_number: phone_number,\r\n                first_name: this.state.input['first_name'],\r\n                last_name: this.state.input['last_name'],\r\n                password: this.state.input['password'],\r\n                re_password: this.state.input['re_password'],\r\n            }).then((res) => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n            });   \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"mt-4\">\r\n                <Form>\r\n                    <h3>Sign up</h3>\r\n                    <Form.Group>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"email\"\r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            value={this.state.input.email}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Email\"\r\n                        />\r\n                        <Form.Text className=\"text-danger\">{this.state.errors.email}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                            <InputGroup.Text>+63</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control \r\n                                required\r\n                                maxLength=\"10\"\r\n                                id=\"phone_number\" \r\n                                name=\"phone_number\"\r\n                                value={this.state.input.phone_number}\r\n                                onChange={this.handlePhoneField}\r\n                                type=\"text\" \r\n                                placeholder=\"Phone\"\r\n                            />\r\n                        </InputGroup>\r\n                        <Form.Text className=\"text-danger\">{this.state.errors.phone_number}</Form.Text>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group>\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"text\"\r\n                            id=\"first_name\" \r\n                            name=\"first_name\" \r\n                            value={this.state.input.first_name}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"First Name\"\r\n                        />\r\n                        <Form.Text className=\"text-danger\">{this.state.errors.first_name}</Form.Text>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group>\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"text\"\r\n                            id=\"last_name\" \r\n                            name=\"last_name\" \r\n                            value={this.state.input.last_name}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Last Name\"\r\n                        />\r\n                        <Form.Text className=\"text-danger\">{this.state.errors.last_name}</Form.Text>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"password\"\r\n                            id=\"password\" \r\n                            name=\"password\" \r\n                            value={this.state.input.password}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Password\"\r\n                        />\r\n                        <Form.Text className=\"text-danger\">{this.state.errors.password}</Form.Text>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group>\r\n                        <Form.Label>Re-type Password</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type=\"password\"\r\n                            id=\"re_password\" \r\n                            name=\"re_password\" \r\n                            value={this.state.input.re_password}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Re-type Password\"\r\n                        />\r\n                        <Form.Text className=\"text-danger\">{this.state.errors.re_password}</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                        <Form.Check type=\"checkbox\" id=\"terms\" label=\"Accept terms & agreements.\" />\r\n                        <Link to=\"/\">Read here</Link>.\r\n                    </Form.Group>\r\n    \r\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n                        Sign up\r\n                    </Button>\r\n                    <p>Already have an account? <Link to=\"/login\">Login</Link></p>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nfunction Activate() {\r\n    return (<>Activate</>);\r\n}\r\n\r\nexport default Activate;","import React from 'react';\r\n\r\nfunction ResetPassword() {\r\n    return (<>Reset Password</>);\r\n}\r\n\r\nexport default ResetPassword;","import React from 'react';\r\n\r\nfunction ResetPasswordConfirm() {\r\n    return (<>Reset Password Confirm</>);\r\n}\r\n\r\nexport default ResetPasswordConfirm;","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state=initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                access: null,\r\n                refresh: null,\r\n                user: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\n\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\nimport Layout from './components/Layout';\r\nimport Home from './components/Home';\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\nimport Activate from './components/Activate';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport ResetPasswordConfirm from './components/ResetPasswordConfirm';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <React.Fragment>\r\n        <Router>\r\n          <Layout>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/signup\" component={Signup} />\r\n              <Route path=\"/activate/:uid/:token\" component={Activate} />\r\n              <Route path=\"/reset_password\" component={ResetPassword} />\r\n              <Route path=\"/password/reset/confirm/:uid/:token\" component={ResetPasswordConfirm} />\r\n            </Switch>\r\n          </Layout>\r\n        </Router>\r\n      </React.Fragment>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}